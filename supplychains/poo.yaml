apiVersion: supply-chain.apps.tanzu.vmware.com/v1alpha1
kind: SupplyChain
metadata:
    name: poo
spec:
    defines:
        group: supplychains.tanzu.vmware.com
        kind: poo
        plural: poos
        version: v1alpha1
    description: poo
    stages:
        - componentRef:
            name: source-git-provider-1.0.0
          name: source-git-provider
        - componentRef:
            name: buildpack-build-1.0.0
          name: buildpack-build
        - componentRef:
            name: trivy-image-scan-1.0.0
          name: trivy-image-scan
        - componentRef:
            name: conventions-1.0.0
          name: conventions
        - componentRef:
            name: app-config-web-1.0.1
          name: app-config-web
        - componentRef:
            name: carvel-package-1.0.0
          name: carvel-package
        - componentRef:
            name: git-writer-1.0.0
          name: git-writer

    config:
    #   overrides:
    #       # builder kind
    #       - path: spec.build.builder.kind
    #         value: clusterbuilder
    #       # builder name
    #       - path: spec.build.builder.name
    #         value: default
    #       # whether to use a cache image
    #       - path: spec.build.cache.enabled
    #         value: false
    #       # cache image to use
    #       - path: spec.build.cache.image
    #         value: '""'
    #       - path: spec.build.env.name
    #         value: ""
    #       - path: spec.build.env.value
    #         value: ""
    #       # Service account to use
    #       - path: spec.build.serviceAccountName
    #         value: default
    #       # PEM encoded certificate data for the image registry where the files will be pushed to.
    #       - path: spec.carvel.caCertData
    #         value: false
    #       # Enable the use of IAAS based authentication for imgpkg.
    #       - path: spec.carvel.iaasAuthEnabled
    #         value: false
    #       # The domain of the Carvel Package. Combines with spec.carvel.packageName to create the Package refName. If set to "", will use "default.tap".
    #       - path: spec.carvel.packageDomain
    #         value: '""'
    #       # The name of the Carvel Package. Combines with spec.carvel.packageDomain to create the Package refName. If set to "", will use the workload name.
    #       - path: spec.carvel.packageName
    #         value: '""'
    #       # Service account that gives kapp-controller privileges to create resources in the namespace.
    #       - path: spec.carvel.serviceAccountName
    #         value: false
    #       # Name of the values Secret that provides customized values to the package installation's templating steps.
    #       - path: spec.carvel.valuesSecretName
    #         value: false
    #       # The name of the environment variable that will be added to the Pod template spec.
    #       - path: spec.env.name
    #         value: ""
    #       # The literal value of the environment variable.
    #       # Note that `value` and `valueFrom` are mutually exclusive; you can only have one per item.
    #       - path: spec.env.value
    #         value: ""
    #       # The key to select.
    #       - path: spec.env.valueFrom.configMapKeyRef.key
    #         value: ""
    #       # The name of the referent.
    #       - path: spec.env.valueFrom.configMapKeyRef.name
    #         value: ""
    #       # Specify whether the ConfigMap or its key must be defined.
    #       - path: spec.env.valueFrom.configMapKeyRef.optional
    #         value: false
    #       # Version of the schema the FieldPath is written in terms of.
    #       - path: spec.env.valueFrom.fieldRef.apiVersion
    #         value: ""
    #       # Path of the field to select in the specified API version.
    #       - path: spec.env.valueFrom.fieldRef.fieldPath
    #         value: ""
    #       # Container name: required for volumes, optional for env vars.
    #       - path: spec.env.valueFrom.resourceFieldRef.containerName
    #         value: ""
    #       # Specifies the output format of the exposed resources.
    #       - path: spec.env.valueFrom.resourceFieldRef.divisor
    #         value: ""
    #       # Resource to select.
    #       - path: spec.env.valueFrom.resourceFieldRef.resource
    #         value: ""
    #       # The key of the secret to select from. Must be a valid secret key.
    #       - path: spec.env.valueFrom.secretKeyRef.key
    #         value: ""
    #       # The name of the referent.
    #       - path: spec.env.valueFrom.secretKeyRef.name
    #         value: ""
    #       # Specify whether the Secret or its key must be defined.
    #       - path: spec.env.valueFrom.secretKeyRef.optional
    #         value: false
    #       # the branch to commit changes to
    #       - path: spec.gitOps.branch
    #         value: main
    #       # the relative path within the gitops repository to add the package configuration to.
    #       - path: spec.gitOps.subPath
    #         value: ""
    #       # the repository to push the pull request to
    #       - path: spec.gitOps.url
    #         value: ""
    #       # The repository to use
    #       - path: spec.registry.repository
    #         value: ""
    #       # The registry address
    #       - path: spec.registry.server
    #         value: ""
    #       - path: spec.scanning.active-keychains.name
    #         value: ""
    #       # It must have write access to the scanResults.location which is SERVER/REPOSITORY where SERVER is from spec.registry.server and REPOSITORY is from spec.registry.repository. The `imagePullSecrets` of this service account must be able to pull the TAP images. The secret in the secrets of the service account must have write access to upload the scan results. Reference [SCST - Scan 2.0 docs](https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.8/tap/scst-scan-install-app-scanning.html#configure-service-accounts-and-registry-credentials-3) for service account setup.
    #       - path: spec.scanning.service-account-publisher
    #         value: ""
    #       # It must have read access to image. The `imagePullSecrets` of this service account must be able to pull the TAP images. The secret in the secrets of the service account must have read access to pull the image to scan. Reference [SCST - Scan 2.0 docs](https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.8/tap/scst-scan-install-app-scanning.html#configure-service-accounts-and-registry-credentials-3) for service account setup.
    #       - path: spec.scanning.service-account-scanner
    #         value: ""
    #       # 'defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
    #       - path: spec.scanning.workspace.bindings.configMap.defaultMode
    #         value: 0
    #       # key is the key to project.
    #       - path: spec.scanning.workspace.bindings.configMap.items.key
    #         value: 0
    #       # 'mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
    #       - path: spec.scanning.workspace.bindings.configMap.items.mode
    #         value: 0
    #       # path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    #       - path: spec.scanning.workspace.bindings.configMap.items.path
    #         value: 0
    #       # 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
    #       - path: spec.scanning.workspace.bindings.configMap.name
    #         value: 0
    #       # optional specify whether the ConfigMap or its keys must be defined
    #       - path: spec.scanning.workspace.bindings.configMap.optional
    #         value: false
    #       # 'medium represents what type of storage medium should back this directory. The default is "" which means to use the node''s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
    #       - path: spec.scanning.workspace.bindings.emptyDir.medium
    #         value: ""
    #       # 'sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
    #       - path: spec.scanning.workspace.bindings.emptyDir.sizeLimit
    #         value: ""
    #       # Name is the name of the workspace populated by the volume.
    #       - path: spec.scanning.workspace.bindings.name
    #         value: ""
    #       # 'defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
    #       - path: spec.scanning.workspace.bindings.secret.defaultMode
    #         value: 0
    #       # key is the key to project.
    #       - path: spec.scanning.workspace.bindings.secret.items.key
    #         value: ""
    #       # 'mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
    #       - path: spec.scanning.workspace.bindings.secret.items.mode
    #         value: 0
    #       # path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    #       - path: spec.scanning.workspace.bindings.secret.items.path
    #         value: 0
    #       # optional field specify whether the Secret or its keys must be defined
    #       - path: spec.scanning.workspace.bindings.secret.optional
    #         value: false
    #       # 'secretName is the name of the secret in the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
    #       - path: spec.scanning.workspace.bindings.secret.secretName
    #         value: false
    #       - path: spec.scanning.workspace.size
    #         value: 4Gi
    #       # A git branch ref to watch for new source
    #       - path: spec.source.git.branch
    #         value: ""
    #       # A git commit sha to use
    #       - path: spec.source.git.commit
    #         value: ""
    #       # A git tag ref to watch for new source
    #       - path: spec.source.git.tag
    #         value: ""
    #       # The url to the git source repository
    #       - path: spec.source.git.url
    #         value: ""
    #       # The sub path in the bundle to locate source code
    #       - path: spec.source.subPath
    #         value: ""
    #   defaults:
    #       # builder kind
    #       - path: spec.build.builder.kind
    #         value: clusterbuilder
    #       # builder name
    #       - path: spec.build.builder.name
    #         value: default
    #       # whether to use a cache image
    #       - path: spec.build.cache.enabled
    #         value: false
    #       # cache image to use
    #       - path: spec.build.cache.image
    #         value: '""'
    #       - path: spec.build.env.name
    #         value: ""
    #       - path: spec.build.env.value
    #         value: ""
    #       # Service account to use
    #       - path: spec.build.serviceAccountName
    #         value: default
    #       # PEM encoded certificate data for the image registry where the files will be pushed to.
    #       - path: spec.carvel.caCertData
    #         value: false
    #       # Enable the use of IAAS based authentication for imgpkg.
    #       - path: spec.carvel.iaasAuthEnabled
    #         value: false
    #       # The domain of the Carvel Package. Combines with spec.carvel.packageName to create the Package refName. If set to "", will use "default.tap".
    #       - path: spec.carvel.packageDomain
    #         value: '""'
    #       # The name of the Carvel Package. Combines with spec.carvel.packageDomain to create the Package refName. If set to "", will use the workload name.
    #       - path: spec.carvel.packageName
    #         value: '""'
    #       # Service account that gives kapp-controller privileges to create resources in the namespace.
    #       - path: spec.carvel.serviceAccountName
    #         value: false
    #       # Name of the values Secret that provides customized values to the package installation's templating steps.
    #       - path: spec.carvel.valuesSecretName
    #         value: false
    #       # The name of the environment variable that will be added to the Pod template spec.
    #       - path: spec.env.name
    #         value: ""
    #       # The literal value of the environment variable.
    #       # Note that `value` and `valueFrom` are mutually exclusive; you can only have one per item.
    #       - path: spec.env.value
    #         value: ""
    #       # The key to select.
    #       - path: spec.env.valueFrom.configMapKeyRef.key
    #         value: ""
    #       # The name of the referent.
    #       - path: spec.env.valueFrom.configMapKeyRef.name
    #         value: ""
    #       # Specify whether the ConfigMap or its key must be defined.
    #       - path: spec.env.valueFrom.configMapKeyRef.optional
    #         value: false
    #       # Version of the schema the FieldPath is written in terms of.
    #       - path: spec.env.valueFrom.fieldRef.apiVersion
    #         value: ""
    #       # Path of the field to select in the specified API version.
    #       - path: spec.env.valueFrom.fieldRef.fieldPath
    #         value: ""
    #       # Container name: required for volumes, optional for env vars.
    #       - path: spec.env.valueFrom.resourceFieldRef.containerName
    #         value: ""
    #       # Specifies the output format of the exposed resources.
    #       - path: spec.env.valueFrom.resourceFieldRef.divisor
    #         value: ""
    #       # Resource to select.
    #       - path: spec.env.valueFrom.resourceFieldRef.resource
    #         value: ""
    #       # The key of the secret to select from. Must be a valid secret key.
    #       - path: spec.env.valueFrom.secretKeyRef.key
    #         value: ""
    #       # The name of the referent.
    #       - path: spec.env.valueFrom.secretKeyRef.name
    #         value: ""
    #       # Specify whether the Secret or its key must be defined.
    #       - path: spec.env.valueFrom.secretKeyRef.optional
    #         value: false
    #       # the branch to commit changes to
    #       - path: spec.gitOps.branch
    #         value: main
    #       # the relative path within the gitops repository to add the package configuration to.
    #       - path: spec.gitOps.subPath
    #         value: ""
    #       # the repository to push the pull request to
    #       - path: spec.gitOps.url
    #         value: ""
    #       # The repository to use
    #       - path: spec.registry.repository
    #         value: ""
    #       # The registry address
    #       - path: spec.registry.server
    #         value: ""
    #       - path: spec.scanning.active-keychains.name
    #         value: ""
    #       # It must have write access to the scanResults.location which is SERVER/REPOSITORY where SERVER is from spec.registry.server and REPOSITORY is from spec.registry.repository. The `imagePullSecrets` of this service account must be able to pull the TAP images. The secret in the secrets of the service account must have write access to upload the scan results. Reference [SCST - Scan 2.0 docs](https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.8/tap/scst-scan-install-app-scanning.html#configure-service-accounts-and-registry-credentials-3) for service account setup.
    #       - path: spec.scanning.service-account-publisher
    #         value: ""
    #       # It must have read access to image. The `imagePullSecrets` of this service account must be able to pull the TAP images. The secret in the secrets of the service account must have read access to pull the image to scan. Reference [SCST - Scan 2.0 docs](https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.8/tap/scst-scan-install-app-scanning.html#configure-service-accounts-and-registry-credentials-3) for service account setup.
    #       - path: spec.scanning.service-account-scanner
    #         value: ""
    #       # 'defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
    #       - path: spec.scanning.workspace.bindings.configMap.defaultMode
    #         value: 0
    #       # key is the key to project.
    #       - path: spec.scanning.workspace.bindings.configMap.items.key
    #         value: 0
    #       # 'mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
    #       - path: spec.scanning.workspace.bindings.configMap.items.mode
    #         value: 0
    #       # path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    #       - path: spec.scanning.workspace.bindings.configMap.items.path
    #         value: 0
    #       # 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
    #       - path: spec.scanning.workspace.bindings.configMap.name
    #         value: 0
    #       # optional specify whether the ConfigMap or its keys must be defined
    #       - path: spec.scanning.workspace.bindings.configMap.optional
    #         value: false
    #       # 'medium represents what type of storage medium should back this directory. The default is "" which means to use the node''s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
    #       - path: spec.scanning.workspace.bindings.emptyDir.medium
    #         value: ""
    #       # 'sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
    #       - path: spec.scanning.workspace.bindings.emptyDir.sizeLimit
    #         value: ""
    #       # Name is the name of the workspace populated by the volume.
    #       - path: spec.scanning.workspace.bindings.name
    #         value: ""
    #       # 'defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
    #       - path: spec.scanning.workspace.bindings.secret.defaultMode
    #         value: 0
    #       # key is the key to project.
    #       - path: spec.scanning.workspace.bindings.secret.items.key
    #         value: ""
    #       # 'mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
    #       - path: spec.scanning.workspace.bindings.secret.items.mode
    #         value: 0
    #       # path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    #       - path: spec.scanning.workspace.bindings.secret.items.path
    #         value: 0
    #       # optional field specify whether the Secret or its keys must be defined
    #       - path: spec.scanning.workspace.bindings.secret.optional
    #         value: false
    #       # 'secretName is the name of the secret in the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
    #       - path: spec.scanning.workspace.bindings.secret.secretName
    #         value: false
    #       - path: spec.scanning.workspace.size
    #         value: 4Gi
    #       # A git branch ref to watch for new source
    #       - path: spec.source.git.branch
    #         value: ""
    #       # A git commit sha to use
    #       - path: spec.source.git.commit
    #         value: ""
    #       # A git tag ref to watch for new source
    #       - path: spec.source.git.tag
    #         value: ""
    #       # The url to the git source repository
    #       - path: spec.source.git.url
    #         value: ""
    #       # The sub path in the bundle to locate source code
    #       - path: spec.source.subPath
    #         value: ""
